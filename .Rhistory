# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7,
position = position_dodge(width = 0.9)) +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "NrcD") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
plot.margin = margin(5, 5, 5, 5, "pt")
)+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
# 显示
P
P <- ggplot(result_all_mix, # 在 ggplot aes() 里明确 group
aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
ggunchained::geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
position = position_dodge(width = 0.9), size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7,
position = position_dodge(width = 0.9)) +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "NrcD") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
plot.margin = margin(5, 5, 5, 5, "pt")
)+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
# 显示
P
P <- ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group  = resolution)) +
# split violin
ggunchained::geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
position = position_dodge(width = 0.9), size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7,
position = position_dodge(width = 0.9)) +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "NrcD") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
plot.margin = margin(5, 5, 5, 5, "pt")
)+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
# 显示
P
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution)+
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median,
position = position_dodge(width = 0.9))+
stat_summary(fun.min = function(x){quantile(x)[2]},
fun.max = function(x){quantile(x)[4]},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
theme_bw() +
scale_y_continuous(name = "RS")+
scale_x_discrete(name = "Cell")+
theme(panel.grid.major = element_blank(),   #不显示网格线
panel.grid.minor = element_blank())
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
P <- ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median,
position = position_dodge(width = 0.9))+
stat_summary(fun.min = function(x){quantile(x)[2]},
fun.max = function(x){quantile(x)[4]},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
theme_bw() +
scale_y_continuous(name = "RS")+
scale_x_discrete(name = "Cell")+
theme(panel.grid.major = element_blank(),   #不显示网格线
panel.grid.minor = element_blank())+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
# 显示
P
library(ggplot2)
library(ggsci)      # 配色
library(ggrepel)    # 样本标签，如果需要
# 定义统一 dodge
pd <- position_dodge(width = 0.9)
P <- ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
position = pd, size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7, position = pd) +
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt")
)
# 显示
P
# 保存
ggsave(P, filename = "fig/S3_小提琴图_beauty.svg", width = 18, height = 6, dpi = 300)
P
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
position = pd, size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7, position = pd) +
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt")
)
# 显示
P
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
position = pd, size = 2.5)
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",
size = 2.5)
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7) +
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt")
)
# 显示
P
P <- ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median,
position = position_dodge(width = 0.9))+
stat_summary(fun.min = function(x){quantile(x)[2]},
fun.max = function(x){quantile(x)[4]},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
theme_bw() +
scale_y_continuous(name = "RS")+
scale_x_discrete(name = "Cell")+
theme(panel.grid.major = element_blank(),   #不显示网格线
panel.grid.minor = element_blank())+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
# 显示
P
# 保存
ggsave(P, filename = "fig/S3_小提琴图.svg", width = 18, height = 6, dpi = 300)
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7) +
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt")
)
# 显示
P
pd
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black"
position = position_dodge(width = 0.9))+
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9))+
stat_summary(fun.min = function(x){quantile(x)[2]},
fun.max = function(x){quantile(x)[4]},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
theme_bw() +
scale_y_continuous(name = "RS")+
scale_x_discrete(name = "Cell")+
theme(panel.grid.major = element_blank(),   #不显示网格线
panel.grid.minor = element_blank())+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9), size = 2.5)+
stat_summary(fun.min = function(x){quantile(x)[2]},
fun.max = function(x){quantile(x)[4]},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
theme_bw() +
scale_y_continuous(name = "RS")+
scale_x_discrete(name = "Cell")+
theme(panel.grid.major = element_blank(),   #不显示网格线
panel.grid.minor = element_blank())+
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +  # 横线
annotate("text", x = 0.5, y = 0.3, label = "0.3", color = "red", vjust = -0.5, hjust = 0)  # 标注
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9), size = 2.5)+
stat_summary(fun.min = function(x){quantile(x, 0.25)},
fun.max = function(x){quantile(x, 0.75)},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt"))
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9), size = 2.5)+
stat_summary(fun.min = function(x){quantile(x, 0.25)},
fun.max = function(x){quantile(x, 0.75)},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt"))
ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution, group = interaction(file, resolution))) +
# split violin
geom_split_violin(trim = FALSE, colour = "white", scale = 'width') +
# 中位点
geom_point(stat = 'summary', fun = median, color = "black",size = 2.5) +
# 四分位误差条
stat_summary(fun.min = function(x) quantile(x, 0.25),
fun.max = function(x) quantile(x, 0.75),
geom = 'errorbar', color = 'black',
width = 0.3, size = 0.7) +
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt")
)
# 显示
P
P<-  ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9), size = 2.5)+
stat_summary(fun.min = function(x){quantile(x, 0.25)},
fun.max = function(x){quantile(x, 0.75)},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "RS") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt"))
# 显示
P
# 保存
ggsave(P, filename = "S3_小提琴图.svg", width = 18, height = 6, dpi = 300)
# 显示
P
# 保存
ggsave(P, filename = "S3_小提琴图.svg", width = 18, height = 6, dpi = 300)
P<-  ggplot(result_all_mix, aes(x = file, y = NrcD, fill = resolution))+
geom_split_violin(trim = FALSE,colour="white", scale = 'width')+ #trim 减尾巴
geom_point(stat = 'summary',fun=median, color = "black",
position = position_dodge(width = 0.9), size = 2.5)+
stat_summary(fun.min = function(x){quantile(x, 0.25)},
fun.max = function(x){quantile(x, 0.75)},
geom = 'errorbar',color='black',
width=0.3,size=0.5,
position = position_dodge(width = 0.9))+
# 横线及标注
geom_hline(yintercept = 0.3, linetype = "dashed", color = "red", size = 0.8) +
annotate("text", x = -Inf, y = 0.3, label = "0.3", color = "red",
hjust = -0.1, vjust = -0.5, fontface = "bold") +
# 配色
scale_fill_npg(name = "Resolution") +
# 坐标轴
scale_y_continuous(name = "NrcD") +
scale_x_discrete(name = "Cell") +
# 主题美化
theme_bw(base_size = 14) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
axis.title = element_text(face = "bold"),
legend.position = c(0.85, 0.85),
legend.background = element_rect(fill = alpha("white", 0.7), color = NA),
legend.title = element_text(face = "bold"),
plot.margin = margin(5, 5, 5, 5, "pt"))
# 显示
P
# 保存
ggsave(P, filename = "S3_小提琴图.svg", width = 18, height = 6, dpi = 300)
# 保存
ggsave(P, filename = "S3_小提琴图.svg", width = 9, height = 4, dpi = 300)
# 保存
ggsave(P, filename = "S3_小提琴图.pdf", width = 8, height = 4, dpi = 300)
